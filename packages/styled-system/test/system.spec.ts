import { allSystemProps } from '../src';

describe('@@manifest-ui/styled-system - allSystemProps', () => {
  it('should return all system props', () => {
    const parser = allSystemProps;

    expect(typeof parser).toBe('function');

    const styles = parser.propNames;

    expect(styles).toEqual([
      'background',
      'backgroundAttachment',
      'backgroundClip',
      'backgroundColor',
      'backgroundImage',
      'backgroundPosition',
      'backgroundRepeat',
      'backgroundSize',
      'bg',
      'bgColor',
      'bgImage',
      'bgClip',
      'bgSize',
      'bgPosition',
      'bgRepeat',
      'bgAttachment',
      'border',
      'borderTop',
      'borderRight',
      'borderBottom',
      'borderLeft',
      'borderX',
      'borderY',
      'borderCollapse',
      'borderRadius',
      'borderTopLeftRadius',
      'borderTopRightRadius',
      'borderTopRadius',
      'borderBottomLeftRadius',
      'borderBottomRightRadius',
      'borderBottomRadius',
      'borderLeftRadius',
      'borderRightRadius',
      'borderInlineEndRadius',
      'borderInlineStartRadius',
      'borderWidth',
      'borderTopWidth',
      'borderBottomWidth',
      'borderLeftWidth',
      'borderRightWidth',
      'borderStyle',
      'borderTopStyle',
      'borderBottomStyle',
      'borderLeftStyle',
      'borderRightStyle',
      'borderColor',
      'borderTopColor',
      'borderBottomColor',
      'borderLeftColor',
      'borderRightColor',
      'borderEndRadius',
      'borderStartRadius',
      'color',
      'fill',
      'opacity',
      'stroke',
      'textColor',
      'alignItems',
      'alignContent',
      'justifyItems',
      'justifyContent',
      'flexWrap',
      'flexDirection',
      'flex',
      'flexFlow',
      'flexGrow',
      'flexShrink',
      'flexBasis',
      'justifySelf',
      'alignSelf',
      'order',
      'placeItems',
      'placeContent',
      'placeSelf',
      'flexDir',
      'gridColumnGap',
      'gridGap',
      'gridRowGap',
      'gridRow',
      'gridColumn',
      'gridAutoFlow',
      'gridAutoRows',
      'gridAutoColumns',
      'gridTemplateRows',
      'gridTemplateColumns',
      'gridTemplateAreas',
      'gridArea',
      'gap',
      'boxSize',
      'width',
      'height',
      'minWidth',
      'minHeight',
      'maxWidth',
      'maxHeight',
      'boxSizing',
      'display',
      'verticalAlign',
      'overflow',
      'overflowX',
      'overflowY',
      'w',
      'h',
      'minW',
      'maxW',
      'minH',
      'maxH',
      'd',
      'animation',
      'appearance',
      'visibility',
      'userSelect',
      'pointerEvents',
      'cursor',
      'resize',
      'objectFit',
      'objectPosition',
      'float',
      'willChange',
      'outline',
      'outlineOffset',
      'transform',
      'transformOrigin',
      'position',
      'zIndex',
      'top',
      'right',
      'bottom',
      'left',
      'pos',
      'boxShadow',
      'textShadow',
      'margin',
      'marginTop',
      'marginRight',
      'marginBottom',
      'marginLeft',
      'marginX',
      'marginY',
      'marginBlockStart',
      'marginBlockEnd',
      'marginInline',
      'marginInlineStart',
      'marginInlineEnd',
      'padding',
      'paddingTop',
      'paddingRight',
      'paddingBottom',
      'paddingLeft',
      'paddingX',
      'paddingY',
      'paddingBlockStart',
      'paddingBlockEnd',
      'paddingInline',
      'paddingInlineStart',
      'paddingInlineEnd',
      'm',
      'mt',
      'mr',
      'mb',
      'ml',
      'mx',
      'my',
      'me',
      'ms',
      'marginEnd',
      'marginStart',
      'p',
      'pt',
      'pb',
      'pl',
      'pr',
      'py',
      'px',
      'pe',
      'ps',
      'paddingEnd',
      'paddingStart',
      'transition',
      'transitionDelay',
      'transitionProperty',
      'transitionDuration',
      'transitionTimingFunction',
      'fontFamily',
      'fontSize',
      'fontWeight',
      'fontStyle',
      'lineHeight',
      'letterSpacing',
      'textAlign',
      'textDecoration',
      'textOverflow',
      'textTransform',
      'whiteSpace',
      'wordBreak',
    ]);
  });
});
